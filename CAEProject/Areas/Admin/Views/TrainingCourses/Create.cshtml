@using CAEProject.Models
@model CAEProject.Models.TrainingCourse

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>新增課程</h2>
<h4>教育訓練</h4>
@using (Html.BeginForm("Create", "TrainingCourses", new { area = "Admin" }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-lg-12">
            <section class="panel">
                <header class="panel-heading">
                    ▼文字資訊
                </header>
                <div class="form-horizontal panel-body text-center">
                    <br />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SeminarStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EnumDropDownListFor(model => model.SeminarStatus, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SeminarStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserId, "負責人", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ContactPhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7" style="display: flex">
                            @Html.EditorFor(model => model.SDate, new { htmlAttributes = new { @class = "form-control datetimepicker1", autocomplete = "off"} })
                            @Html.ValidationMessageFor(model => model.SDate, "", new { @class = "text-danger" })
                            <p style="font-size: 20px;"> ~ </p>
                            @Html.EditorFor(model => model.EDate, new { htmlAttributes = new { @class = "form-control datetimepicker1", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.EDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SignUpSDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7 " style="display: flex">
                            @Html.EditorFor(model => model.SignUpSDate, new { htmlAttributes = new { @class = "form-control datetimepicker1", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.SignUpSDate, "", new { @class = "text-danger" })
                            <p style="font-size: 20px;"> ~ </p>
                            @Html.EditorFor(model => model.SignUpEDate, new { htmlAttributes = new { @class = "form-control datetimepicker1", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.SignUpEDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Quota, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Quota, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quota, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Alternate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Alternate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Alternate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Handle, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EnumDropDownListFor(model => model.Handle, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Handle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*@if (Model.Handle==Handle.委辦)//此須修改為下拉判定變更
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Assisting, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.Assisting, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Assisting, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }*@


                    <div class="form-group">
                        @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.TextAreaFor(model => model.Count, new { @class = "ckeditor" })
                            @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Success, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Success, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Success, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </section>
        </div>

        <div class="col-lg-12">
            <section class="panel">
                <header class="panel-heading">
                    ▼圖示/附件
                </header>
                <div class="form-horizontal panel-body text-center">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            <input type="file" name="upFile" />
                            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AdImage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            <input type="file" name="upImage" />
                            @Html.ValidationMessageFor(model => model.AdImage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                </div>
            </section>
        </div>
        <div class="col-lg-12">
            <section class="panel">
                <header class="panel-heading">
                    ▼狀態
                </header>
                <div class="form-horizontal panel-body text-center">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                </div>
            </section>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-7">
                <button type="submit" class="btn btn-info"><span class="icon_cloud-upload_alt"></span> 送出</button>
                <a href="@Url.Action("Index", "TrainingCourses", new {area = "admin"})" style="margin: 0 0 0 5px" class="btn btn-danger"><span class="icon_house_alt"></span> 返回</a>
            </div>
        </div>
    </div>
}